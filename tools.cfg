[gcode_macro _Before_Align_Tool]
gcode:
    SET_GCODE_OFFSET X=0 Y=0 Z=0
    G91
    G0 Z10
    G90
    {% set bed_temp = params.TEMPERATURE|default(40)|float %}

[gcode_macro _Load_Front_Tool]
gcode:
    Check_Tool_Is_Not_Loaded
    G90
    G0 Y0
    SET_KINEMATIC_POSITION Y=100
    G91
    G0 X20 F540
    G0 Y-100
    G0 X-20
    Check_Carriage_Is_Loaded
    G0 Y100
    G90
    SET_KINEMATIC_POSITION Y=0


[gcode_macro _Unload_Front_Tool]
gcode:
    Check_Carriage_Is_Loaded
    G90
    G0 Y0
    SET_KINEMATIC_POSITION Y=100
    G91
    G0 Y-100 F540
    G0 X20
    Check_Carriage_Is_Empty
    G0 Y100
    G0 X-20
    G90
    SET_KINEMATIC_POSITION Y=0

[gcode_button Carriage_Loaded_Button]
pin: PG12
press_gcode:
    {% set carriage_loaded = printer["gcode_button Carriage_Loaded_Button"].state %}
    RESPOND MSG="Carriage Loaded Button: {carriage_loaded}"
release_gcode:
    {% set carriage_loaded = printer["gcode_button Carriage_Loaded_Button"].state %}
    RESPOND MSG="Carriage Loaded Button: {carriage_loaded}"

[gcode_macro Check_Carriage_Is_Loaded]
gcode:
    M400
    _Check_Carriage_Is_Loaded

[gcode_macro _Check_Carriage_Is_Loaded]
gcode:
    {% set carriage_loaded = printer["gcode_button Carriage_Loaded_Button"].state %}
    {% if carriage_loaded == "RELEASED" %}
        RESPOND MSG="Expecting carriage to have a tool, but tool is not loaded"
        { action_raise_error("Expecting carriage to have a tool, but tool is not loaded") }
    {% endif %}

[gcode_macro Check_Carriage_Is_Empty]
gcode:
    M400
    _Check_Carriage_Is_Empty

[gcode_macro _Check_Carriage_Is_Empty]
gcode:
    {% set carriage_loaded = printer["gcode_button Carriage_Loaded_Button"].state %}
    RESPOND MSG="Carriage Loaded Button: {carriage_loaded}"
    {% if carriage_loaded == "PRESSED" %}
        RESPOND MSG="Expecting carriage to be empty, but tool is loaded"
        { action_raise_error("Expecting carriage to be empty, but tool is loaded") }
    {% endif %}

[gcode_button Unsafe_Zone_Button]
pin: PG13
press_gcode:
    {% set in_unsafe_zone = printer["gcode_button Unsafe_Zone_Button"].state %}
    RESPOND MSG="Unsafe Zone: {in_unsafe_zone}"
release_gcode:
    {% set in_unsafe_zone = printer["gcode_button Unsafe_Zone_Button"].state %}
    RESPOND MSG="Unsafe Zone: {in_unsafe_zone}"
