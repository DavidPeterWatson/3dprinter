[firmware_retraction]
retract_length: 3
unretract_extra_length: 0.0
retract_speed: 60
unretract_speed: 60


[servo extruder_brush_servo]
pin: PG13 # STOP_5
maximum_servo_angle: 90
minimum_pulse_width: 0.001
maximum_pulse_width: 0.00230
initial_angle: 0


[output_pin extruder_brush_servo_power]
pin: PD15 # FAN5
value: 0
shutdown_value: 0


[gcode_macro M104]
description: Override "M104" to allow multiple extruders.
rename_existing: M104.1
gcode:
    {% set temperature = params.S|default(0)|float %}
    {% set extruder = params.T|default(-1)|int %}
    {% if extruder != -1 %}
        M104.1 S{temperature} T{extruder}
    {% else %}
        RESPOND MSG='Ignoring extruder temperature of {temperature} because extruder is not specified'
    {% endif %}


[gcode_macro M109]
description: Override "M109" to allow multiple extruders.
rename_existing: M109.1
gcode:
    {% set temperature = params.S|default(0)|float %}
    {% set extruder = params.T|default(-1)|int %}
    {% if extruder != -1 %}
        RESPOND MSG='Waiting for the temperature of extruder {extruder} to reach {temperature}'
        M109.1 S{temperature} T{extruder}
    {% else %}
        RESPOND MSG='Ignoring extruder temperature of {temperature} because extruder is not specified'
    {% endif %}


[gcode_macro LOAD_EXTRUDER]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set temperature = params.TEMPERATURE|default(0)|float %}
    {% set retract_length = params.RETRACT_LENGTH|default(3)|float %}
    RESPOND MSG='Loading extruder {carriage_name} with temperature {temperature} and retract length {retract_length}'
    M104 S{temperature} T{carriage.tool_number}
    LOAD_CARRIAGE CARRIAGE={carriage_name}
    SET_RETRACTION_FOR_EXTRUDER RETRACT_LENGTH={retract_length}
    CALIBRATE_OR_CLEAN_EXTRUDER CARRIAGE={carriage_name} S='{temperature}'


[gcode_macro SET_RETRACTION_FOR_EXTRUDER]
description: Set Retraction Settings for Extruder
gcode:
    RESPOND MSG="Setting retraction settings for Extruder"
    SET_RETRACTION RETRACT_SPEED=60 UNRETRACT_SPEED=60 RETRACT_LENGTH={params.RETRACT_LENGTH}


[gcode_macro RETRACT_FROM_HOT_ZONE]
gcode:
    {% if printer.extruder.can_extrude %}
        RESPOND MSG='Retracting from hot zone'
        SAVE_GCODE_STATE NAME=RETRACT_FROM_HOT_ZONE_STATE
        USE_RELATIVE_EXTRUSION
        G1 E-20 F4800
        RESTORE_GCODE_STATE NAME=RETRACT_FROM_HOT_ZONE_STATE
    {% endif %}


[gcode_macro ADVANCE_INTO_HOT_ZONE]
gcode:
    {% if printer.extruder.can_extrude %}
        RESPOND MSG='Advancing into hot zone'
        SAVE_GCODE_STATE NAME=ADVANCE_INTO_HOT_ZONE_STATE
        USE_RELATIVE_EXTRUSION
        G1 E20 F4800
        RESTORE_GCODE_STATE NAME=ADVANCE_INTO_HOT_ZONE_STATE
    {% endif %}


[gcode_macro CALIBRATE_OR_CLEAN_EXTRUDER]
description: Clean the current extruder
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set temperature = params.S|default(0)|float %}
    {% if not carriage.calibrated %}
        CALIBRATE_EXTRUDER CARRIAGE='{carriage_name}' S='{temperature}'
    {% else %}
        CLEAN_EXTRUDER CARRIAGE='{carriage_name}' S='{temperature}'
    {% endif %}


[gcode_macro CLEAN_EXTRUDER]
description: Clean the specified extruder
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set temperature = params.S|default(0)|float %}
    RESPOND MSG='Cleaning extruder {carriage_name} at temperature {temperature}'
    M104 S{required_temperature} T{carriage.tool_number}
    LOAD_CARRIAGE CARRIAGE='{carriage_name}'
    PREPARE_TO_BRUSH
    {% set required_temperature = params.S|default(0)|float %}
    {% set current_temperature = printer.extruder.temperature|default(0)|float %}
    {% if (current_temperature < required_temperature - 2) and (required_temperature > 0) %}
        M109 S{required_temperature} T{carriage.tool_number}
    {% endif %}
    FULL_BRUSH


[gcode_macro CALIBRATE_EXTRUDER]
description: Clean and calibrate the specified extruder
gcode:
    {% set required_temperature = params.S|default(0)|float %}
    {% set cleaning_temperature = required_temperature - 30.0 %}
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    RESPOND MSG='Calibrating extruder {carriage.tool_number}. Required temp:{required_temperature} cleaning temp:{cleaning_temperature}'
    M104 S{required_temperature} T{carriage.tool_number}
    LOAD_CARRIAGE CARRIAGE='{carriage_name}'
    PREPARE_TO_BRUSH
    M109 S{required_temperature} T{carriage.tool_number}
    M104 S{cleaning_temperature} T{carriage.tool_number}
    M106 S255
    BRUSH
    M109 S{cleaning_temperature} T{carriage.tool_number}
    M107
    BRUSH
    CLOSE_BRUSH
    CALIBRATE_CARRIAGE CARRIAGE={carriage_name}
    PREPARE_TO_BRUSH
    M109 S{required_temperature} T{carriage.tool_number}
    FULL_BRUSH


[gcode_macro FULL_BRUSH]
gcode:
    ADVANCE_INTO_HOT_ZONE
    PURGE
    BRUSH RETRACT='yes'
    CLOSE_BRUSH
    MOVE_TO_SAFE_ORIGIN
    ADVANCE_INTO_HOT_ZONE


[gcode_macro CALIBRATE_EXTRUDER_WITHOUT_CLEANING]
description: Clean the current extruder
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    RESPOND MSG='Calibrating extruder {carriage.tool_number} without cleaning'
    LOAD_CARRIAGE CARRIAGE='{carriage_name}'
    CALIBRATE_CARRIAGE CARRIAGE={carriage_name}


[gcode_macro PREPARE_TO_BRUSH]
description: Move the current tool above the brush, move the bed and open the brush
gcode:
    MOVE_BED_BELOW_BRUSH
    MOVE_OVER_BRUSH
    OPEN_BRUSH


[gcode_macro MOVE_OVER_BRUSH]
description: Move the current tool above the brush
gcode:
    RESPOND MSG='Moving over brush'
    SAVE_GCODE_STATE NAME=MOVE_OVER_BRUSH_STATE
    Move_To_Safe_Z
    USE_ABSOLUTE_POSITIONING
    USE_MAX_VELOCITY
    G0 X22 Y85
    RESTORE_GCODE_STATE NAME=MOVE_OVER_BRUSH_STATE


[gcode_macro PURGE]
gcode:
    RESPOND MSG='Purging'
    SAVE_GCODE_STATE NAME=PURGE_STATE
    USE_RELATIVE_EXTRUSION
    G1 E10 F600
    RESTORE_GCODE_STATE NAME=PURGE_STATE


[gcode_macro BRUSH]
gcode:
    RESPOND MSG='Brushing'
    MOVE_OVER_BRUSH
    SAVE_GCODE_STATE NAME=BRUSH_STATE
    USE_RELATIVE_POSITIONING
    USE_MAX_VELOCITY
    G0 Y-10
    G0 X-100
    G0 Y10

    G0 X10 Y10
    G0 X-10 Y10
    G0 X10
    G0 X10 Y-10
    G0 X-10 Y-10
    G0 X10

    {% set retract = params.RETRACT|default('no') %}
    {% if retract == 'yes' %}
        RETRACT_FROM_HOT_ZONE
    {% endif %}

    G0 X10 Y10
    G0 X-10 Y10
    G0 X10
    G0 X10 Y-10
    G0 X-10 Y-10
    G0 X10

    G0 X10 Y10
    G0 X-10 Y10
    G0 X10
    G0 X10 Y-10
    G0 X-10 Y-10
    G0 X10

    RESTORE_GCODE_STATE NAME=BRUSH_STATE
    MOVE_OVER_BRUSH


[gcode_macro OPEN_BRUSH]
gcode:
    SET_SERVO SERVO=extruder_brush_servo ANGLE=90
    SET_PIN PIN=extruder_brush_servo_power VALUE=1


[gcode_macro CLOSE_BRUSH]
gcode:
    SET_SERVO SERVO=extruder_brush_servo ANGLE=0
    TURN_OFF_BRUSH


[gcode_macro TURN_OFF_BRUSH]
gcode:
    G4 P700
    SET_PIN PIN=extruder_brush_servo_power VALUE=0
    SET_SERVO SERVO=extruder_brush_servo WIDTH=0


[gcode_macro MOVE_BED_BELOW_BRUSH]
gcode:
    M400
    _MOVE_BED_BELOW_BRUSH


[gcode_macro _MOVE_BED_BELOW_BRUSH]
gcode:
    # {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    {% if printer.toolhead.position.z < 15 %}
        SAVE_GCODE_STATE NAME=MOVE_BED_BELOW_BRUSH_STATE
        G90
        G0 Z20
        RESTORE_GCODE_STATE NAME=MOVE_BED_BELOW_BRUSH_STATE
    {% endif %}


[gcode_macro G10]
description: Override "G10" to add wipe.
rename_existing: G10.1
gcode:
    RETRACT_WITH_WIPE


[gcode_macro RETRACT_WITH_WIPE]
description: Retract with wipe.
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set retract_length = firmware_retraction.retract_length %}
    {% set retract_speed = firmware_retraction.retract_speed * 60 %}
    {% set max_velocity = printer.configfile.settings.printer.max_velocity * 60 %}
    SAVE_GCODE_STATE NAME=RETRACT_WITH_WIPE_STATE
    USE_RELATIVE_POSITIONING
    G0 X1 Z0.1 E-{retract_length} F{retract_speed}
    G0 Y1 F{max_velocity}
    G0 X-2 F{max_velocity}
    G0 Y-2 F{max_velocity}
    G0 X2 F{max_velocity}
    G0 Y1 F{max_velocity}
    RESTORE_GCODE_STATE NAME=RETRACT_WITH_WIPE_STATE


[gcode_macro RETRACT_DURING_WIPE]
description: Retract with wipe.
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set retract_length = firmware_retraction.retract_length %}
    {% set partial_retract_length = retract_length / 6 %}
    {% set retract_speed = firmware_retraction.retract_speed * 60 %}
    {% set partial_retract_speed = retract_speed * 6 %}
    SAVE_GCODE_STATE NAME=RETRACT_DURING_WIPE_STATE
    USE_RELATIVE_POSITIONING
    G0 X1 Z0.1 E-{partial_retract_length} F{partial_retract_speed}
    G0 Y1 E-{partial_retract_length} F{partial_retract_speed}
    G0 X-2 E-{partial_retract_length} F{partial_retract_speed}
    G0 Y-2 E-{partial_retract_length} F{partial_retract_speed}
    G0 X2 E-{partial_retract_length} F{partial_retract_speed}
    G0 Y1 E-{partial_retract_length} F{partial_retract_speed}
    RESTORE_GCODE_STATE NAME=RETRACT_DURING_WIPE_STATE


[gcode_macro RETRACT_WITHOUT_WIPE]
description: Retract without wipe
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set retract_length = firmware_retraction.retract_length %}
    {% set retract_speed = firmware_retraction.retract_speed * 60 %}
    SAVE_GCODE_STATE NAME=RETRACT_WITHOUT_WIPE_STATE
    USE_RELATIVE_POSITIONING
    G0 E-{retract_length} F{retract_speed}
    RESTORE_GCODE_STATE NAME=RETRACT_WITHOUT_WIPE_STATE


[gcode_macro G11]
description: Override "G11 unretract".
rename_existing: G11.1
gcode:
    UNRETRACT


[gcode_macro UNRETRACT]
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set unretract_length = firmware_retraction.retract_length + firmware_retraction.unretract_extra_length %}
    {% set unretract_speed = firmware_retraction.unretract_speed * 60 %}
    SAVE_GCODE_STATE NAME=UNRETRACT_STATE
    USE_RELATIVE_EXTRUSION
    G0 E{unretract_length} F{unretract_speed}
    DWELL DURATION=100
    RESTORE_GCODE_STATE NAME=UNRETRACT_STATE
