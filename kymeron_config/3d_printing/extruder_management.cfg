[extruder_management default]
hot_zone_retract_length: 20
hot_zone_retract_speed: 80
purge_length: 10
retract_xy_wiggle: 2
retract_z: 0.1
brush_movement: 30
brush_shift: 10


[firmware_retraction]
retract_length: 3
unretract_extra_length: 0.0
retract_speed: 60
unretract_speed: 60


[gcode_macro M104]
description: Override "M104" to allow multiple extruders.
rename_existing: M104.1
gcode:
    {% set temperature = params.S|default(0)|float %}
    {% set extruder = params.T|default(-1)|int %}
    {% if extruder != -1 %}
        M104.1 S{temperature} T{extruder}
    {% else %}
        RESPOND MSG='Ignoring extruder temperature of {temperature} because extruder is not specified'
    {% endif %}


[gcode_macro M109]
description: Override "M109" to allow multiple extruders.
rename_existing: M109.1
gcode:
    {% set temperature = params.S|default(0)|float %}
    {% set extruder = params.T|default(-1)|int %}
    {% if extruder != -1 %}
        RESPOND MSG='Waiting for the temperature of extruder {extruder} to reach {temperature}'
        M109.1 S{temperature} T{extruder}
    {% else %}
        RESPOND MSG='Ignoring extruder temperature of {temperature} because extruder is not specified'
    {% endif %}


[gcode_macro LOAD_EXTRUDER]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set temperature = params.TEMPERATURE|default(0)|float %}
    {% set retract_length = params.RETRACT_LENGTH|default(3)|float %}
    RESPOND MSG='Loading extruder {carriage_name} with temperature {temperature} and retract length {retract_length}'
    M104 S{temperature} T{carriage.tool_number}
    LOAD_CARRIAGE CARRIAGE={carriage_name}
    SET_RETRACTION_FOR_EXTRUDER RETRACT_LENGTH={retract_length}
    CALIBRATE_OR_CLEAN_EXTRUDER CARRIAGE={carriage_name} S='{temperature}'


[gcode_macro SET_RETRACTION_FOR_EXTRUDER]
description: Set Retraction Settings for Extruder
gcode:
    RESPOND MSG="Setting retraction settings for Extruder"
    SET_RETRACTION RETRACT_SPEED=60 UNRETRACT_SPEED=60 RETRACT_LENGTH={params.RETRACT_LENGTH}


[gcode_macro RETRACT_FROM_HOT_ZONE]
gcode:
    {% if printer.extruder.can_extrude %}
        RESPOND MSG='Retracting from hot zone'
        {% set extruder_management = printer.printer.lookup_object('extruder_management') %}
        {% set retract_length = extruder_management.hot_zone_retract_length %}
        {% set retract_speed = extruder_management.hot_zone_retract_speed %}
        SAVE_GCODE_STATE NAME=RETRACT_FROM_HOT_ZONE_STATE
        USE_RELATIVE_EXTRUSION
        G1 E-{retract_length} F{retract_speed}
        RESTORE_GCODE_STATE NAME=RETRACT_FROM_HOT_ZONE_STATE
    {% endif %}


[gcode_macro ADVANCE_INTO_HOT_ZONE]
gcode:
    {% if printer.extruder.can_extrude %}
        RESPOND MSG='Advancing into hot zone'
        {% set extruder_management = printer.printer.lookup_object('extruder_management') %}
        {% set retract_length = extruder_management.hot_zone_retract_length %}
        {% set retract_speed = extruder_management.hot_zone_retract_speed %}
        SAVE_GCODE_STATE NAME=ADVANCE_INTO_HOT_ZONE_STATE
        USE_RELATIVE_EXTRUSION
        G1 E{retract_length} F{retract_speed}
        RESTORE_GCODE_STATE NAME=ADVANCE_INTO_HOT_ZONE_STATE
    {% endif %}


[gcode_macro CALIBRATE_OR_CLEAN_EXTRUDER]
description: Clean the current extruder
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set temperature = params.S|default(0)|float %}
    {% if not carriage.calibrated %}
        CALIBRATE_EXTRUDER CARRIAGE='{carriage_name}' S='{temperature}'
    {% else %}
        CLEAN_EXTRUDER CARRIAGE='{carriage_name}' S='{temperature}'
    {% endif %}


[gcode_macro CLEAN_EXTRUDER]
description: Clean the specified extruder
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set temperature = params.S|default(0)|float %}
    RESPOND MSG='Cleaning extruder {carriage_name} at temperature {temperature}'
    M104 S{required_temperature} T{carriage.tool_number}
    LOAD_CARRIAGE CARRIAGE='{carriage_name}'
    PREPARE_TO_BRUSH
    {% set required_temperature = params.S|default(0)|float %}
    {% set current_temperature = printer.extruder.temperature|default(0)|float %}
    {% if (current_temperature < required_temperature - 2) and (required_temperature > 0) %}
        M109 S{required_temperature} T{carriage.tool_number}
    {% endif %}
    FULL_BRUSH


[gcode_macro CALIBRATE_EXTRUDER]
description: Clean and calibrate the specified extruder
gcode:
    {% set required_temperature = params.S|default(0)|float %}
    {% set cleaning_temperature = required_temperature - 30.0 %}
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    RESPOND MSG='Calibrating extruder {carriage.tool_number}. Required temp:{required_temperature} cleaning temp:{cleaning_temperature}'
    M104 S{required_temperature} T{carriage.tool_number}
    LOAD_CARRIAGE CARRIAGE='{carriage_name}'
    PREPARE_TO_BRUSH
    M109 S{required_temperature} T{carriage.tool_number}
    M104 S{cleaning_temperature} T{carriage.tool_number}
    M106 S255
    BRUSH
    M109 S{cleaning_temperature} T{carriage.tool_number}
    M107
    BRUSH
    CLOSE_BRUSH
    CALIBRATE_CARRIAGE CARRIAGE={carriage_name}
    PREPARE_TO_BRUSH
    M109 S{required_temperature} T{carriage.tool_number}
    FULL_BRUSH


[gcode_macro FULL_BRUSH]
gcode:
    ADVANCE_INTO_HOT_ZONE
    PURGE
    BRUSH RETRACT='yes'
    CLOSE_BRUSH
    MOVE_TO_SAFE_ORIGIN
    ADVANCE_INTO_HOT_ZONE


[gcode_macro CALIBRATE_EXTRUDER_WITHOUT_CLEANING]
description: Clean the current extruder
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    RESPOND MSG='Calibrating extruder {carriage.tool_number} without cleaning'
    LOAD_CARRIAGE CARRIAGE='{carriage_name}'
    CALIBRATE_CARRIAGE CARRIAGE={carriage_name}


[gcode_macro PURGE]
gcode:
    RESPOND MSG='Purging'
    {% set extruder_management = printer.printer.lookup_object('extruder_management') %}
    {% set purge_length = extruder_management.purge_length %}
    SAVE_GCODE_STATE NAME=PURGE_STATE
    USE_RELATIVE_EXTRUSION
    G1 E{purge_length} F600
    RESTORE_GCODE_STATE NAME=PURGE_STATE


[gcode_macro G10]
description: Override "G10" to add wipe.
rename_existing: G10.1
gcode:
    RETRACT_WITH_WIPE


[gcode_macro RETRACT_AND_WIPE]
description: Retract and wipe.
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set retract_length = firmware_retraction.retract_length %}
    {% set retract_speed = firmware_retraction.retract_speed * 60 %}
    {% set max_velocity = printer.configfile.settings.printer.max_velocity * 60 %}
    {% set extruder_management = printer.printer.lookup_object('extruder_management') %}
    {% set retract_xy_wiggle = extruder_management.retract_xy_wiggle %}
    {% set retract_xy_wiggle_half = retract_xy_wiggle / 2 %}
    {% set retract_z = extruder_management.retract_z %}
    SAVE_GCODE_STATE NAME=RETRACT_AND_WIPE_STATE
    USE_RELATIVE_POSITIONING
    G1 X{retract_xy_wiggle_half} Z{retract_z} E-{retract_length} F{retract_speed}
    G0 Y{retract_xy_wiggle_half} F{max_velocity}
    G0 X-{retract_xy_wiggle}
    G0 Y-{retract_xy_wiggle}
    G0 X{retract_xy_wiggle}
    G0 Y{retract_xy_wiggle_half}
    G0 X-{retract_xy_wiggle_half}
    RESTORE_GCODE_STATE NAME=RETRACT_AND_WIPE_STATE


[gcode_macro RETRACT_WITH_WIPE]
description: Retract with wipe.
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set retract_length = firmware_retraction.retract_length %}
    {% set partial_retract_length = retract_length / 6 %}
    {% set retract_speed = firmware_retraction.retract_speed * 60 * 1.2 %}
    {% set extruder_management = printer.printer.lookup_object('extruder_management') %}
    {% set retract_xy_wiggle = extruder_management.retract_xy_wiggle %}
    {% set retract_xy_wiggle_half = retract_xy_wiggle / 2 %}
    {% set retract_z = extruder_management.retract_z %}
    SAVE_GCODE_STATE NAME=RETRACT_DURING_WIPE_STATE
    USE_RELATIVE_POSITIONING
    G1 X{retract_xy_wiggle_half} Z{retract_z} E-{partial_retract_length} F{retract_speed}
    G0 Y{retract_xy_wiggle_half} E-{partial_retract_length}
    G0 X-{retract_xy_wiggle} E-{partial_retract_length}
    G0 Y-{retract_xy_wiggle} E-{partial_retract_length}
    G0 X{retract_xy_wiggle} E-{partial_retract_length}
    G0 Y{retract_xy_wiggle_half} E-{partial_retract_length}
    G0 X-{retract_xy_wiggle_half}
    RESTORE_GCODE_STATE NAME=RETRACT_DURING_WIPE_STATE


[gcode_macro RETRACT_WITHOUT_WIPE]
description: Retract without wipe
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set retract_length = firmware_retraction.retract_length %}
    {% set retract_speed = firmware_retraction.retract_speed * 60 %}
    SAVE_GCODE_STATE NAME=RETRACT_WITHOUT_WIPE_STATE
    USE_RELATIVE_POSITIONING
    G1 E-{retract_length} F{retract_speed}
    RESTORE_GCODE_STATE NAME=RETRACT_WITHOUT_WIPE_STATE


[gcode_macro G11]
description: Override "G11 unretract".
rename_existing: G11.1
gcode:
    UNRETRACT


[gcode_macro UNRETRACT]
gcode:
    {% set firmware_retraction = printer.printer.lookup_object('firmware_retraction') %}
    {% set unretract_length = firmware_retraction.retract_length + firmware_retraction.unretract_extra_length %}
    {% set unretract_speed = firmware_retraction.unretract_speed * 60 %}
    SAVE_GCODE_STATE NAME=UNRETRACT_STATE
    USE_RELATIVE_EXTRUSION
    G1 E{unretract_length} F{unretract_speed}
    DWELL DURATION=100
    RESTORE_GCODE_STATE NAME=UNRETRACT_STATE
