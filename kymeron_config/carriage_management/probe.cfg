[multi_axis_probe]
pin: ~PG14 # STOP_6 with pull down
x_offset: 0
y_offset: 0
z_offset: 0
speed: 2
lift_speed: 4
max_distance: 12
bounce_ratio: 0.1
bounce_count: 3

[tool_probe]
probe: multi_axis_probe
x_pos: -67.736562
y_pos: 47.088125
z_pos: 0
spread: 5
lower_z: 1
final_lift_z: 10
travel_speed: 30

# [gcode_button Probe_Button]
# pin: ~PG14 # STOP_6
# press_gcode:
#     {% set button_state = printer['gcode_button Probe_Button'].state %}
#     RESPOND MSG='Probe Button State: {button_state}'
# release_gcode:
#     {% set button_state = printer['gcode_button Probe_Button'].state %}
#     RESPOND MSG='Probe Button State: {button_state}'

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: PB5
microsteps: 16
rotation_distance: 3
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA3
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: -200
min_extrude_temp: 0
max_temp: 40
sensor_pin: PF4
sensor_type: Generic 3950


[berth berth_1]
dock: front
x_pos: -108.4


[carriage bed_probe]
berth: berth_1
tool_number: 0
offset_x: -14.1625
offset_y: 0
offset_z: 0
loaded_button: Bed_Probe_Loaded_Button


[gcode_button Bed_Probe_Loaded_Button]
pin: PB8
press_gcode:
    {% set button_state = printer['gcode_button Bed_Probe_Loaded_Button'].state %}
    RESPOND MSG='Bed Probe Loaded Button State: {button_state}'


[gcode_macro LOAD_BED_PROBE]
gcode:
    LOAD_CARRIAGE CARRIAGE=bed_probe


[gcode_macro UNLOAD_BED_PROBE]
gcode:
    Unload_Carriage CARRIAGE=bed_probe


[gcode_macro CHECK_THAT_PROBES_ARE_CALIBRATED]
description: Calibrate the bed probe & tool probe if not calibrated yet
gcode:
    {% set tool_probe = printer.printer.lookup_object('tool_probe') %}
    {% if tool_probe.sensor_location is none %}
        CALIBRATE_PROBES
    {% endif %}


[gcode_macro CALIBRATE_PROBES]
description: Calibrate the bed probe & tool probe by locating the tool probe with the bed probe
gcode:
    CHECK_THAT_PRINTER_IS_HOMED
    LOAD_BED_PROBE
    MOVE_OVER_TOOL_PROBE
    LOCATE_TOOL_PROBE
    Move_To_Safe_Z


[gcode_macro MOVE_OVER_TOOL_PROBE]
description: Move the current tool above the tool probe
gcode:
    SAVE_GCODE_STATE NAME=MOVE_OVER_TOOL_PROBE_STATE
    Move_To_Safe_Z
    USE_ABSOLUTE_POSITIONING
    USE_MAX_VELOCITY
    G0 X-67.736562 Y47.088125
    MOVE_TO_EXACTLY_SAFE_Z
    RESTORE_GCODE_STATE NAME=MOVE_OVER_TOOL_PROBE_STATE


[gcode_macro CALIBRATE_CARRIAGE]
description: Calibrate the x, y & z offset for the tool
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% if not carriage.calibrated %}
        RESPOND MSG='Calibrating {carriage_name}'
        LOAD_CARRIAGE CARRIAGE='{carriage_name}'
        SET_PROBING_ACCELERATION
        MOVE_OVER_TOOL_PROBE
        DWELL DURATION=500
        CALIBRATE_TOOL_OFFSET
        SET_PRINTER_MAX_ACCELERATION
        SAVE_CARRIAGE_OFFSET CARRIAGE={carriage_name}
        REMEMBER_CARRIAGE_IS_CALIBRATED CARRIAGE={carriage_name}
        Move_To_Safe_Z
    {% else %}
        RESPOND MSG='Carriage {carriage_name} has already been calibrated'
    {% endif %}


[gcode_macro SAVE_CARRIAGE_OFFSET]
description: Save Calibration
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set tool_probe = printer.printer.lookup_object('tool_probe') %}
    {% set status = tool_probe.get_status(none) %}
    {% set _ = carriage.__setattr__('offset_x', status.last_x_result) %}
    {% set _ = carriage.__setattr__('offset_y', status.last_y_result) %}
    {% set _ = carriage.__setattr__('offset_z', status.last_z_result) %}
    Set_Offset_For_Carriage CARRIAGE='{carriage.name}'
    RESPOND MSG='Calibration complete for {carriage_name} x offset {carriage,offset_x}, y offset {carriage,offset_y}, z offset {carriage,offset_z}'


[gcode_macro REMEMBER_CARRIAGE_IS_CALIBRATED]
description: Remember that Carriage has been calibrated
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set _ = carriage.__setattr__('calibrated', True) %}
    RESPOND MSG='Carriage {carriage_name} has finished calibration'


[gcode_macro SET_PROBING_ACCELERATION]
gcode:
    {% set calibration_acceleration = 1000 %}
    RESPOND MSG='Setting probing acceleration to {calibration_acceleration}'
    M204 S{calibration_acceleration}
